version: 2.1

orbs:
  python: circleci/python@2.0.3
  node: circleci/node@5.0.2

jobs:
  example-job:
    machine: # executor type
      image: ubuntu-2004:2022.04.1

    steps:
      - checkout

      - node/install-packages:
          pkg-manager: yarn

      - run:
          name: Start LocalStack
          command: |
            pip3 install localstack awscli-local[ver1] # install LocalStack cli and awslocal
            docker pull localstack/localstack:2.0.0         
            docker version
            docker ps -a --format '{{json .}}'
            localstack start -d                       # Start LocalStack in the background

            echo "Waiting for LocalStack startup..."  # Wait 30 seconds for the LocalStack container
            localstack wait -t 30                     # to become ready before timing out 
            echo "Startup complete"


      - run:
          name: Install deps
          command: |
            npm install -g aws-cdk-local aws-cdk
            cdklocal --version
            yarn
            
      - run:
          name: Run some Tests against LocalStack
          command: |
            cdklocal bootstrap aws://000000000000/us-east-1
            cdklocal deploy --require-approval never --outputs-file cdk_outputs.json
            awslocal lambda list-functions
            awslocal sqs list-queues 
            awslocal dynamodb list-tables
            front_queue_url=$(awslocal sqs list-queues | jq -r .QueueUrls[0])
            awslocal sqs send-message-batch --queue-url $front_queue_url --entries file://test/testMessagesFirst.json
            awslocal sqs send-message-batch --queue-url $front_queue_url --entries file://test/testMessagesSecond.json
            awslocal sqs send-message-batch --queue-url $front_queue_url --entries file://test/testMessagesThird.json
            awslocal sqs send-message-batch --queue-url $front_queue_url --entries file://test/cornerCase1.json
            awslocal sqs send-message-batch --queue-url $front_queue_url --entries file://test/cornerCase2.json
            yarn test
            endpoint_url=$(cat cdk_outputs.json | jq -r .FriendMicroservicesStack[])
            result_player_1=$(curl -X GET "$endpoint_url"friends/player1 | jq -r .[0].friend_id)
            result_player_2=$(curl -X GET "$endpoint_url"friends/player2 | jq -r .[0].friend_id)
            if [[ $result_player_1 != "player2" ]] || [[ $result_player_2 != "player1" ]]; then
              echo "unexpected response"
              echo $result_player_1 $result_player_2
              exit 1
            fi

workflows:
  version: 2
  build:
    jobs:
      - example-job
